name: Deploy macOS

on: 
   push:
      branches: [ "master" ]
   pull_request:
      branches: [ "master" ]
   release:
      types: [published]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  AQT_VERSION: '==3.3.*'
  QT_VERSION: '6.9.1'
  ASSIMP_VERSION: '6.0.2'
  ASSIMP_DIR_VERSION: '6.0'
  OGRE_VERSION: '14.3.4'

jobs:
####################################################################
# MacOS Deploy 
####################################################################

 build-n-cache-assimp-macos:
    runs-on: macos-latest
    steps:
    - name: change folder permissions
      run: |
            sudo mkdir /usr/local/lib
            sudo mkdir /usr/local/include
            sudo chmod -R 777 /usr/local/lib
            sudo chmod -R 777 /usr/local/include

    - name: Cache Assimp
      id: cache-assimp-macos
      uses: actions/cache@v3
      env:
        cache-name: cache-assimp-macos
      with:
        path: |
               /usr/local/lib/cmake
               /usr/local/include/assimp
               /usr/local/include/contrib
               /usr/local/lib/pkgconfig/assimp.pc
               /usr/local/lib/libassimp*
               /usr/local/lib/libzlibstatic.a
        #key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('/home/runner/work/QtMeshEditor/QtMeshEditor/assimp') }}
        # Need to delete manually if needed to rebuild. Until I find a better solution for detecting changes in the assimp repo.
        key: ${{ runner.os }}-build-${{ env.cache-name }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          
    - if: steps.cache-assimp-macos.outputs.cache-hit != 'true'
      name: Check out Assimp repo
      uses: actions/checkout@master
      with:
          repository: assimp/assimp
          ref: v${{ env.ASSIMP_VERSION }}
          path: /Users/runner/work/QtMeshEditor/QtMeshEditor/assimp
      
    - if: steps.cache-assimp-macos.outputs.cache-hit != 'true'
      name: Build Assimp repo
      run: |
            cmake -B /Users/runner/work/QtMeshEditor/QtMeshEditor/assimp-build -S /Users/runner/work/QtMeshEditor/QtMeshEditor/assimp -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
            cd /Users/runner/work/QtMeshEditor/QtMeshEditor/assimp-build/
            sudo make install -j8

 build-n-cache-ogre-macos:
    needs: build-n-cache-assimp-macos
    runs-on: macos-latest
    steps:    
    - name: change folder permissions
      run: |
          sudo mkdir /usr/local/lib
          sudo mkdir /usr/local/include
          sudo chmod -R 777 /usr/local/lib
          sudo chmod -R 777 /usr/local/include

    - name: Cache Assimp
      id: cache-assimp-macos
      uses: actions/cache@v3
      env:
        cache-name: cache-assimp-macos
      with:
        path: |
               /usr/local/lib/cmake
               /usr/local/include/assimp
               /usr/local/include/contrib
               /usr/local/lib/pkgconfig/assimp.pc
               /usr/local/lib/libassimp*
               /usr/local/lib/libzlibstatic.a
        key: ${{ runner.os }}-build-${{ env.cache-name }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
      
    - name: Cache Ogre
      id: cache-ogre-macos
      uses: actions/cache@v3
      env:
        cache-name: cache-ogre-macos
      with:
        path: ${{github.workspace}}/ogre/SDK
        key: ${{ runner.os }}-build-${{ env.cache-name }}
    
    - if: steps.cache-ogre-macos.outputs.cache-hit != 'true'
      name: Check out ogre repo
      uses: actions/checkout@master
      with:
          repository: OGRECave/ogre
          ref: v${{ env.OGRE_VERSION }}
          path: ${{github.workspace}}/ogre
         
    - if: steps.cache-ogre-macos.outputs.cache-hit != 'true'
      name: Build Ogre3D repo
      run: |
            cd ${{github.workspace}}/ogre/
            sudo cmake -S . -DOGRE_BUILD_PLUGIN_ASSIMP=ON -Dassimp_DIR=/usr/local/lib/cmake/assimp-${{ env.ASSIMP_DIR_VERSION }}/ \
            -DOGRE_BUILD_PLUGIN_DOT_SCENE=ON -DOGRE_BUILD_RENDERSYSTEM_GL=ON -DOGRE_BUILD_RENDERSYSTEM_GL3PLUS=ON \
            -DOGRE_BUILD_RENDERSYSTEM_GLES2=OFF -DOGRE_BUILD_TESTS=OFF -DOGRE_BUILD_TOOLS=OFF -DOGRE_BUILD_SAMPLES=OFF \
            -DOGRE_BUILD_COMPONENT_CSHARP=OFF -DOGRE_BUILD_COMPONENT_JAVA=OFF -DOGRE_BUILD_COMPONENT_PYTHON=OFF \
            -DOGRE_INSTALL_TOOLS=OFF -DOGRE_INSTALL_DOCS=OFF -DOGRE_INSTALL_SAMPLES=OFF -DOGRE_BUILD_LIBS_AS_FRAMEWORKS=OFF \
            -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
            sudo make install -j8

 build-macos:
    needs: [build-n-cache-assimp-macos, build-n-cache-ogre-macos]
    runs-on: macos-latest
    steps:
    - name: change folder permissions
      run: |
            sudo mkdir /usr/local/lib
            sudo mkdir /usr/local/include
            sudo chmod -R 777 /usr/local/lib
            sudo chmod -R 777 /usr/local/include

    - uses: actions/checkout@v3
      with:
         submodules: true
         
    - run: |
            cd ${{github.workspace}}/src/dependencies/ogre-procedural
            git checkout master
            git pull
            
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        aqtversion: ${{ env.AQT_VERSION }}
        version: ${{ env.QT_VERSION }}
        host: 'mac'
        target: 'desktop'
        arch: 'clang_64'
        tools: 'tools_cmake'

    - name: Cache Assimp
      id: cache-assimp-macos
      uses: actions/cache@v3
      env:
        cache-name: cache-assimp-macos
      with:
        path: |
               /usr/local/lib/cmake
               /usr/local/include/assimp
               /usr/local/include/contrib
               /usr/local/lib/pkgconfig/assimp.pc
               /usr/local/lib/libassimp*
               /usr/local/lib/libzlibstatic.a
        key: ${{ runner.os }}-build-${{ env.cache-name }}
      
    - name: Cache Ogre
      id: cache-ogre-macos
      uses: actions/cache@v3
      env:
        cache-name: cache-ogre-macos
      with:
        path: ${{github.workspace}}/ogre/SDK
        key: ${{ runner.os }}-build-${{ env.cache-name }}
    
    - name: Configure CMake
      env:
         OGRE_DIR: ${{github.workspace}}/ogre/SDK/CMake/
      run: |
            sudo cmake -S . \
            -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
            -DASSIMP_DIR=/usr/local/lib/cmake/assimp-${{ env.ASSIMP_DIR_VERSION }} \
            -DASSIMP_INCLUDE_DIR=/usr/local/include/assimp \
            -DQt6_DIR=/Users/runner/work/QtMeshEditor/Qt/${{ env.QT_VERSION }}/clang_64/lib/cmake/Qt6 \
            -DQT_DIR=/Users/runner/work/QtMeshEditor/Qt/${{ env.QT_VERSION }}/clang_64/lib/cmake/Qt6 \
            -DQt6GuiTools_DIR=/Users/runner/work/QtMeshEditor/Qt/${{ env.QT_VERSION }}/clang_64/lib/cmake/Qt6GuiTools \
            -DOGRE_DIR=${{github.workspace}}/ogre/SDK/CMake/ 
    
    - name: Build
      # Build your program with the given configuration
      run: |
            sudo make install -j8

    - name: Copy Qt libs to app folder
      run: |
            sudo cp -R /Users/runner/work/QtMeshEditor/Qt/${{ env.QT_VERSION }}/macos/lib/QtWidgets.framework ${{github.workspace}}/bin/QtMeshEditor.app/Contents/MacOS/QtWidgets.framework
            sudo cp -R /Users/runner/work/QtMeshEditor/Qt/${{ env.QT_VERSION }}/macos/lib/QtCore.framework ${{github.workspace}}/bin/QtMeshEditor.app/Contents/MacOS/QtCore.framework
            sudo cp -R /Users/runner/work/QtMeshEditor/Qt/${{ env.QT_VERSION }}/macos/lib/QtGui.framework ${{github.workspace}}/bin/QtMeshEditor.app/Contents/MacOS/QtGui.framework
            sudo cp -R /Users/runner/work/QtMeshEditor/Qt/${{ env.QT_VERSION }}/macos/lib/QtDBus.framework ${{github.workspace}}/bin/QtMeshEditor.app/Contents/MacOS/QtDBus.framework
            sudo cp -R /Users/runner/work/QtMeshEditor/Qt/${{ env.QT_VERSION }}/macos/plugins/platforms ${{github.workspace}}/bin/QtMeshEditor.app/Contents/MacOS/platforms
            sudo cp -R /usr/local/lib/libassimp* ${{github.workspace}}/bin/QtMeshEditor.app/Contents/MacOS/

    - name: Prepare for packing
      run: |
            sudo cp -R ${{github.workspace}}/bin/media ${{github.workspace}}/bin/QtMeshEditor.app/Contents/MacOS/media
            sudo cp -R ${{github.workspace}}/bin/cfg ${{github.workspace}}/bin/QtMeshEditor.app/Contents/MacOS/cfg
            sudo cp -R ${{github.workspace}}/resources/icon.icns ${{github.workspace}}/bin/QtMeshEditor.app/Contents/MacOS/media
            sudo mkdir ${{github.workspace}}/bin/QtMeshEditor.app/Contents/Resources
            sudo cp -R ${{github.workspace}}/resources/icon.icns ${{github.workspace}}/bin/QtMeshEditor.app/Contents/Resources
            sudo cp -R ${{github.workspace}}/bin/Info.plist ${{github.workspace}}/bin/QtMeshEditor.app/Contents/
            sudo install_name_tool -add_rpath @loader_path/ ${{github.workspace}}/bin/QtMeshEditor.app/Contents/MacOS/QtMeshEditor

    - name: Pack
      run: | 
            brew install create-dmg
            sudo create-dmg \
            --volname "QtMeshEditor Installer" \
            --volicon "${{github.workspace}}/resources/icon.icns" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "QtMeshEditor.app" 200 190 \
            --app-drop-link 600 185 \
            QtMeshEditor-${{github.ref_name}}-MacOS.dmg \
            ${{github.workspace}}/bin/QtMeshEditor.app
    
    - if: github.event_name == 'release' && github.event.action == 'published'
      uses: actions/upload-artifact@v4
      with:
        name: QtMeshEditor-MacOS
        path: ${{github.workspace}}/QtMeshEditor-${{github.ref_name}}-MacOS.dmg
        
    - if: github.event_name == 'release' && github.event.action == 'published'
      uses: xresloader/upload-to-github-release@main
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          file: QtMeshEditor-${{github.ref_name}}-MacOS.dmg
          update_latest_release: true
          overwrite: false
          verbose: true 